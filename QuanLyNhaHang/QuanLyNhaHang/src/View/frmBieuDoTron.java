/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAL.dal_ThongKe;
import Model.ThongKe;
import Model.ThongKe1;
import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.util.Date;
import java.util.List;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.ui.ApplicationFrame;

/**
 *
 * @author admin
 */
public class frmBieuDoTron extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmBieuDoTron
     */
    frmTrangChu frmTC;
    public frmBieuDoTron( frmTrangChu frmTC) {
        initComponents();
        this.frmTC=frmTC;
        loadChart1();
        loadChart2();
        
    }
    
    
    
void loadChart1() {
    
    List <ThongKe> lstTK= dal_ThongKe.getThongKe();
     DefaultPieDataset dataset = new DefaultPieDataset();
    for(ThongKe item: lstTK)
    {
    // Tạo dataset cho biểu đồ tròn
        //JOptionPane.showMessageDialog(null,item.getMaSP()+" Và "+item.getSL());
    dataset.setValue(item.getMaSP(), new Integer(item.getSL()));
   
    }

    // Tạo biểu đồ tròn
    JFreeChart chart = ChartFactory.createPieChart(
        "Top 5 sản phẩm", // Tiêu đề
        dataset, // Dataset
        true, // Hiển thị hình chữ nhật chú thích
        true, // Hiển thị tooltips
        false // Không hiển thị URLs
    );

    // Thiết lập font cho biểu đồ
    chart.getTitle().setFont(new Font("Arial", Font.BOLD, 18));
    chart.getLegend().setItemFont(new Font("Arial", Font.PLAIN, 14));

    // Thiết lập màu cho các phần tử trong biểu đồ
    PiePlot plot = (PiePlot) chart.getPlot();
    plot.setBackgroundPaint(Color.white);
    plot.setLabelFont(new Font("Arial", Font.PLAIN, 14));
    


      for(ThongKe item: lstTK)
    {
            // Tạo dataset cho biểu đồ tròn
        Random rand = new Random();

        // Tạo một màu ngẫu nhiên
        int r = rand.nextInt(256);
        int g = rand.nextInt(256);
        int b = rand.nextInt(256);
            plot.setSectionPaint(item.getMaSP(), new Color(r, g, b));
     
   
    }
    

    // Thêm bảng biểu đồ vào Panel1 trong luồng giao diện người dùng
    ChartPanel chartPanel = new ChartPanel(chart);
    chartPanel.setPreferredSize(new java.awt.Dimension(280, 249));
    Panel1.setLayout(new BorderLayout());
    Panel1.add(chartPanel, BorderLayout.CENTER);
    Panel1.validate();
}



void loadChart2()
{
    List<ThongKe1> tk = dal_ThongKe.getThongKe2();
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    
    for (ThongKe1 item: tk)
    {
         dataset.addValue(item.getTongtien(), "Doanh thu", item.getNgaytao());
    }
    //// Tạo biểu đồ line chart
   JFreeChart chart = ChartFactory.createLineChart(
        "Doanh thu theo ngày",
        "Ngày",
        "Doanh thu",
        dataset,
        PlotOrientation.VERTICAL,
        true,
        true,
        false
    );
   
   chart.getTitle().setFont(new Font("Arial", Font.BOLD, 18));
    chart.getLegend().setItemFont(new Font("Arial", Font.PLAIN, 14));
    CategoryPlot plot = chart.getCategoryPlot();
    plot.getDomainAxis().setLabelFont(new Font("Arial", Font.PLAIN, 14));
    plot.getRangeAxis().setLabelFont(new Font("Arial", Font.PLAIN, 14));
    
    
    // Hiển thị biểu đồ trong ứng dụng
    ChartPanel chartPanel = new ChartPanel(chart);
    chartPanel.setPreferredSize(new java.awt.Dimension(280, 249));
       jPanel4.setLayout(new BorderLayout());
     jPanel4.add(chartPanel, BorderLayout.CENTER);
   jPanel4.validate();
   
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Panel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        jPanel1.setBackground(new java.awt.Color(255, 102, 51));

        jPanel2.setBackground(new java.awt.Color(2, 84, 100));
        jPanel2.setPreferredSize(new java.awt.Dimension(224, 54));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Biểu đồ thống kê sản phẩm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Panel1Layout = new javax.swing.GroupLayout(Panel1);
        Panel1.setLayout(Panel1Layout);
        Panel1Layout.setHorizontalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        Panel1Layout.setVerticalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 243, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 243, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(56, 56, 56))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
